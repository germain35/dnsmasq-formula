{%- set dnsmasq = pillar.get('dnsmasq', {}) -%}
{%- set default = dnsmasq.get('default', {}) -%}

# This file has five functions: 
# 1) to completely disable starting dnsmasq, 
# 2) to set DOMAIN_SUFFIX by running `dnsdomainname` 
# 3) to select an alternative config file
#    by setting DNSMASQ_OPTS to --conf-file=<file>
# 4) to tell dnsmasq to read the files in /etc/dnsmasq.d for
#    more configuration variables.
# 5) to stop the resolvconf package from controlling dnsmasq's
#    idea of which upstream nameservers to use.
# For upgraders from very old versions, all the shell variables set 
# here in previous versions are still honored by the init script
# so if you just keep your old version of this file nothing will break.

{%- if default.DOMAIN_SUFFIX is defined %}
DOMAIN_SUFFIX={{default.DOMAIN_SUFFIX}}
{%- else %}
#DOMAIN_SUFFIX=`dnsdomainname`
{%- endif %}

{%- if default.DNSMASQ_OPTS is defined %}
DNSMASQ_OPTS="{{default.DNSMASQ_OPTS}}"
{%- else %}
#DNSMASQ_OPTS="--conf-file=/etc/dnsmasq.alt"
{%- endif %}

# Whether or not to run the dnsmasq daemon; set to 0 to disable.
ENABLED={{default.get('ENABLED', 1)}}

# By default search this drop directory for configuration options.
# Libvirt leaves a file here to make the system dnsmasq play nice.
# Comment out this line if you don't want this. The dpkg-* are file
# endings which cause dnsmasq to skip that file. This avoids pulling
# in backups made by dpkg.
CONFIG_DIR={{default.get('CONFIG_DIR', "/etc/dnsmasq.d,.dpkg-dist,.dpkg-old,.dpkg-new")}}

# If the resolvconf package is installed, dnsmasq will use its output 
# rather than the contents of /etc/resolv.conf to find upstream 
# nameservers. Uncommenting this line inhibits this behaviour.
# Note that including a "resolv-file=<filename>" line in 
# /etc/dnsmasq.conf is not enough to override resolvconf if it is
# installed: the line below must be uncommented.
{%- if default.IGNORE_RESOLVCONF is defined %}
IGNORE_RESOLVCONF={{default.IGNORE_RESOLVCONF}}
{%- else %}
#IGNORE_RESOLVCONF=yes
{%- endif %}

{%- if default.DNSMASQ_EXCEPT is defined %}
DNSMASQ_EXCEPT={{default.DNSMASQ_EXCEPT}}
{%- else %}
#DNSMASQ_EXCEPT=lo
{%- endif %}